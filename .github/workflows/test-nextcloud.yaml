on: push

jobs:
  test-nextcloud:
    name: Test Nextcloud
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Install deps
        run: |
          sudo apt-get update -qqy &&
          sudo apt-get install -qy podman
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Build image
        run: |
          IMAGE=$(awk '$1=="amd64:"{print $2}' nextcloud/build.yaml) &&
          podman build \
            --tag nc-image \
            --build-arg BUILD_FROM=$IMAGE \
            nextcloud
      # initial
      - name: Prepare test data
        run: |
          podman volume create nc-apps &&
          podman volume create nc-config &&
          podman volume create nc-config-old &&
          podman volume create nc-data &&
          echo '{"apps_dir":"/data/apps","config_dir":"/data/config","data_dir":"/data/data"}' > nc-options.json
      - name: Initial startup
        timeout-minutes: 1
        run: |
          podman run --rm \
            -p 8080:80 \
            --name nc-container \
            -v nc-apps:/data/apps:rw \
            -v nc-config:/config:rw \
            -v nc-config-old:/data/config:rw \
            -v nc-data:/data/data:rw \
            -v $PWD/nc-options.json:/data/options.json:ro \
            -e NEXTCLOUD_ADMIN_USER=admin \
            -e NEXTCLOUD_ADMIN_PASSWORD=admin \
            -e SQLITE_DATABASE=db \
            nc-image &
          until curl -sv http://127.0.0.1:8080/login 2>&1 | grep -q "HTTP/1.1 200 OK"; do sleep 1; echo "# retry"; done
          podman stop nc-container
      - name: Verify initial startup
        run: |
          podman run \
            -v nc-config:/config:ro \
            alpine \
              ls -l /config/config.php /config/config.sample.php &&
          podman run \
            -v nc-config-old:/data/config:ro \
            alpine \
              sh -c '! ls -l /data/config/*'
      # persistent data
      - name: Prepare persistent test data
        run: |
          podman run \
            -v nc-apps:/data/apps:rw \
            -v nc-config:/config:rw \
            -v nc-config-old:/data/config:rw \
            -v nc-data:/data/data:rw \
            alpine \
              touch /data/apps/test-file /data/config/old-file /data/data/test-file /config/test-file
      - name: Persistent startup
        timeout-minutes: 1
        run: |
          podman run \
            -p 8080:80 \
            -p 9000:9000 \
            --name nc-container \
            -v nc-apps:/data/apps:rw \
            -v nc-config:/config:rw \
            -v nc-config-old:/data/config:rw \
            -v nc-data:/data/data:rw \
            -v $PWD/nc-options.json:/data/options.json:ro \
            nc-image &
          until curl -sv http://127.0.0.1:8080/login 2>&1 | grep -q "HTTP/1.1 200 OK"; do sleep 1; echo "# retry"; done
      - name: Verify persistent startup
        run: |
          podman logs nc-container 2>&1 |
            grep -F "Nextcloud is already latest version" &&
          podman logs nc-container 2>&1 |
            grep -F ".htaccess has been updated" &&
          podman run \
            -v nc-apps:/data/apps:ro \
            -v nc-config:/config:ro \
            -v nc-data:/data/data:ro \
            alpine \
              ls -l /data/apps/test-file /data/data/test-file /config/test-file /config/old-file &&
          podman run \
            -v nc-config-old:/data/config:ro \
            alpine \
              sh -c '! ls -l /data/config/*'
      # maintenance mode
      - name: Activate maintenance mode
        run: |
          curl -fsv http://127.0.0.1:9000/hooks/maintenance_on &&
          until curl -sv http://127.0.0.1:8080/login 2>&1 | grep -q "HTTP/1.1 503 "; do sleep 1; echo "# retry"; done
      - name: Deactivate maintenance mode
        run: |
          curl -fsv http://127.0.0.1:9000/hooks/maintenance_off &&
          until curl -sv http://127.0.0.1:8080/login 2>&1 | grep -q "HTTP/1.1 200 OK"; do sleep 1; echo "# retry"; done
      # collect logs
      - name: Collect logs
        if: failure()
        run: podman logs nc-container
